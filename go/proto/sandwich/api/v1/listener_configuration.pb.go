// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: proto/api/v1/listener_configuration.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BlockingMode int32

const (
	BlockingMode_BLOCKINGMODE_UNSPECIFIED BlockingMode = 0
	BlockingMode_BLOCKINGMODE_BLOCKING    BlockingMode = 1
	BlockingMode_BLOCKINGMODE_NONBLOCKING BlockingMode = 2
)

// Enum value maps for BlockingMode.
var (
	BlockingMode_name = map[int32]string{
		0: "BLOCKINGMODE_UNSPECIFIED",
		1: "BLOCKINGMODE_BLOCKING",
		2: "BLOCKINGMODE_NONBLOCKING",
	}
	BlockingMode_value = map[string]int32{
		"BLOCKINGMODE_UNSPECIFIED": 0,
		"BLOCKINGMODE_BLOCKING":    1,
		"BLOCKINGMODE_NONBLOCKING": 2,
	}
)

func (x BlockingMode) Enum() *BlockingMode {
	p := new(BlockingMode)
	*p = x
	return p
}

func (x BlockingMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockingMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_v1_listener_configuration_proto_enumTypes[0].Descriptor()
}

func (BlockingMode) Type() protoreflect.EnumType {
	return &file_proto_api_v1_listener_configuration_proto_enumTypes[0]
}

func (x BlockingMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockingMode.Descriptor instead.
func (BlockingMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_v1_listener_configuration_proto_rawDescGZIP(), []int{0}
}

type SocketAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *SocketAddress) Reset() {
	*x = SocketAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketAddress) ProtoMessage() {}

func (x *SocketAddress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketAddress.ProtoReflect.Descriptor instead.
func (*SocketAddress) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_listener_configuration_proto_rawDescGZIP(), []int{0}
}

func (x *SocketAddress) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SocketAddress) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ListenerModeTCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr         *SocketAddress `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	BlockingMode BlockingMode   `protobuf:"varint,2,opt,name=blocking_mode,json=blockingMode,proto3,enum=saq.sandwich.proto.api.v1.BlockingMode" json:"blocking_mode,omitempty"`
}

func (x *ListenerModeTCP) Reset() {
	*x = ListenerModeTCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerModeTCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerModeTCP) ProtoMessage() {}

func (x *ListenerModeTCP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerModeTCP.ProtoReflect.Descriptor instead.
func (*ListenerModeTCP) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_listener_configuration_proto_rawDescGZIP(), []int{1}
}

func (x *ListenerModeTCP) GetAddr() *SocketAddress {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *ListenerModeTCP) GetBlockingMode() BlockingMode {
	if x != nil {
		return x.BlockingMode
	}
	return BlockingMode_BLOCKINGMODE_UNSPECIFIED
}

type ListenerConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Mode:
	//
	//	*ListenerConfiguration_Tcp
	Mode isListenerConfiguration_Mode `protobuf_oneof:"mode"`
}

func (x *ListenerConfiguration) Reset() {
	*x = ListenerConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenerConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenerConfiguration) ProtoMessage() {}

func (x *ListenerConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_listener_configuration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenerConfiguration.ProtoReflect.Descriptor instead.
func (*ListenerConfiguration) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_listener_configuration_proto_rawDescGZIP(), []int{2}
}

func (m *ListenerConfiguration) GetMode() isListenerConfiguration_Mode {
	if m != nil {
		return m.Mode
	}
	return nil
}

func (x *ListenerConfiguration) GetTcp() *ListenerModeTCP {
	if x, ok := x.GetMode().(*ListenerConfiguration_Tcp); ok {
		return x.Tcp
	}
	return nil
}

type isListenerConfiguration_Mode interface {
	isListenerConfiguration_Mode()
}

type ListenerConfiguration_Tcp struct {
	Tcp *ListenerModeTCP `protobuf:"bytes,1,opt,name=tcp,proto3,oneof"`
}

func (*ListenerConfiguration_Tcp) isListenerConfiguration_Mode() {}

var File_proto_api_v1_listener_configuration_proto protoreflect.FileDescriptor

var file_proto_api_v1_listener_configuration_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x73, 0x61, 0x71,
	0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0x3f, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x43, 0x50, 0x12, 0x3c, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x61, 0x71, 0x2e,
	0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x27, 0x2e, 0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x43, 0x50, 0x48, 0x00, 0x52, 0x03, 0x74, 0x63, 0x70,
	0x42, 0x06, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x2a, 0x65, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4c, 0x4f, 0x43,
	0x4b, 0x49, 0x4e, 0x47, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49,
	0x4e, 0x47, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x42,
	0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2d, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x75, 0x6d, 0x2f, 0x73, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_v1_listener_configuration_proto_rawDescOnce sync.Once
	file_proto_api_v1_listener_configuration_proto_rawDescData = file_proto_api_v1_listener_configuration_proto_rawDesc
)

func file_proto_api_v1_listener_configuration_proto_rawDescGZIP() []byte {
	file_proto_api_v1_listener_configuration_proto_rawDescOnce.Do(func() {
		file_proto_api_v1_listener_configuration_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_v1_listener_configuration_proto_rawDescData)
	})
	return file_proto_api_v1_listener_configuration_proto_rawDescData
}

var file_proto_api_v1_listener_configuration_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_api_v1_listener_configuration_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_api_v1_listener_configuration_proto_goTypes = []interface{}{
	(BlockingMode)(0),             // 0: saq.sandwich.proto.api.v1.BlockingMode
	(*SocketAddress)(nil),         // 1: saq.sandwich.proto.api.v1.SocketAddress
	(*ListenerModeTCP)(nil),       // 2: saq.sandwich.proto.api.v1.ListenerModeTCP
	(*ListenerConfiguration)(nil), // 3: saq.sandwich.proto.api.v1.ListenerConfiguration
}
var file_proto_api_v1_listener_configuration_proto_depIdxs = []int32{
	1, // 0: saq.sandwich.proto.api.v1.ListenerModeTCP.addr:type_name -> saq.sandwich.proto.api.v1.SocketAddress
	0, // 1: saq.sandwich.proto.api.v1.ListenerModeTCP.blocking_mode:type_name -> saq.sandwich.proto.api.v1.BlockingMode
	2, // 2: saq.sandwich.proto.api.v1.ListenerConfiguration.tcp:type_name -> saq.sandwich.proto.api.v1.ListenerModeTCP
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_api_v1_listener_configuration_proto_init() }
func file_proto_api_v1_listener_configuration_proto_init() {
	if File_proto_api_v1_listener_configuration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_v1_listener_configuration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocketAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_listener_configuration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerModeTCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_listener_configuration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListenerConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_v1_listener_configuration_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListenerConfiguration_Tcp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_v1_listener_configuration_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_api_v1_listener_configuration_proto_goTypes,
		DependencyIndexes: file_proto_api_v1_listener_configuration_proto_depIdxs,
		EnumInfos:         file_proto_api_v1_listener_configuration_proto_enumTypes,
		MessageInfos:      file_proto_api_v1_listener_configuration_proto_msgTypes,
	}.Build()
	File_proto_api_v1_listener_configuration_proto = out.File
	file_proto_api_v1_listener_configuration_proto_rawDesc = nil
	file_proto_api_v1_listener_configuration_proto_goTypes = nil
	file_proto_api_v1_listener_configuration_proto_depIdxs = nil
}
