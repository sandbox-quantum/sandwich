// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: proto/api/v1/verifiers.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyVerifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyVerifier) Reset() {
	*x = EmptyVerifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_verifiers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyVerifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyVerifier) ProtoMessage() {}

func (x *EmptyVerifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_verifiers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyVerifier.ProtoReflect.Descriptor instead.
func (*EmptyVerifier) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_verifiers_proto_rawDescGZIP(), []int{0}
}

type X509Verifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrustedCas                   []*Certificate `protobuf:"bytes,1,rep,name=trusted_cas,json=trustedCas,proto3" json:"trusted_cas,omitempty"`
	AllowExpiredCertificate      bool           `protobuf:"varint,4,opt,name=allow_expired_certificate,json=allowExpiredCertificate,proto3" json:"allow_expired_certificate,omitempty"`
	MaxVerifyDepth               uint32         `protobuf:"varint,5,opt,name=max_verify_depth,json=maxVerifyDepth,proto3" json:"max_verify_depth,omitempty"`
	LoadCasFromDefaultVerifyPath bool           `protobuf:"varint,6,opt,name=load_cas_from_default_verify_path,json=loadCasFromDefaultVerifyPath,proto3" json:"load_cas_from_default_verify_path,omitempty"`
}

func (x *X509Verifier) Reset() {
	*x = X509Verifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_verifiers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *X509Verifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509Verifier) ProtoMessage() {}

func (x *X509Verifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_verifiers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509Verifier.ProtoReflect.Descriptor instead.
func (*X509Verifier) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_verifiers_proto_rawDescGZIP(), []int{1}
}

func (x *X509Verifier) GetTrustedCas() []*Certificate {
	if x != nil {
		return x.TrustedCas
	}
	return nil
}

func (x *X509Verifier) GetAllowExpiredCertificate() bool {
	if x != nil {
		return x.AllowExpiredCertificate
	}
	return false
}

func (x *X509Verifier) GetMaxVerifyDepth() uint32 {
	if x != nil {
		return x.MaxVerifyDepth
	}
	return 0
}

func (x *X509Verifier) GetLoadCasFromDefaultVerifyPath() bool {
	if x != nil {
		return x.LoadCasFromDefaultVerifyPath
	}
	return false
}

type SANMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to San:
	//
	//	*SANMatcher_Email
	//	*SANMatcher_Dns
	//	*SANMatcher_IpAddress
	San isSANMatcher_San `protobuf_oneof:"san"`
}

func (x *SANMatcher) Reset() {
	*x = SANMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_verifiers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SANMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SANMatcher) ProtoMessage() {}

func (x *SANMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_verifiers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SANMatcher.ProtoReflect.Descriptor instead.
func (*SANMatcher) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_verifiers_proto_rawDescGZIP(), []int{2}
}

func (m *SANMatcher) GetSan() isSANMatcher_San {
	if m != nil {
		return m.San
	}
	return nil
}

func (x *SANMatcher) GetEmail() string {
	if x, ok := x.GetSan().(*SANMatcher_Email); ok {
		return x.Email
	}
	return ""
}

func (x *SANMatcher) GetDns() string {
	if x, ok := x.GetSan().(*SANMatcher_Dns); ok {
		return x.Dns
	}
	return ""
}

func (x *SANMatcher) GetIpAddress() string {
	if x, ok := x.GetSan().(*SANMatcher_IpAddress); ok {
		return x.IpAddress
	}
	return ""
}

type isSANMatcher_San interface {
	isSANMatcher_San()
}

type SANMatcher_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type SANMatcher_Dns struct {
	Dns string `protobuf:"bytes,2,opt,name=dns,proto3,oneof"`
}

type SANMatcher_IpAddress struct {
	IpAddress string `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3,oneof"`
}

func (*SANMatcher_Email) isSANMatcher_San() {}

func (*SANMatcher_Dns) isSANMatcher_San() {}

func (*SANMatcher_IpAddress) isSANMatcher_San() {}

type SANVerifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AltNames []*SANMatcher `protobuf:"bytes,1,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
}

func (x *SANVerifier) Reset() {
	*x = SANVerifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_verifiers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SANVerifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SANVerifier) ProtoMessage() {}

func (x *SANVerifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_verifiers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SANVerifier.ProtoReflect.Descriptor instead.
func (*SANVerifier) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_verifiers_proto_rawDescGZIP(), []int{3}
}

func (x *SANVerifier) GetAltNames() []*SANMatcher {
	if x != nil {
		return x.AltNames
	}
	return nil
}

type TunnelVerifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Verifier:
	//
	//	*TunnelVerifier_SanVerifier
	//	*TunnelVerifier_EmptyVerifier
	Verifier isTunnelVerifier_Verifier `protobuf_oneof:"verifier"`
}

func (x *TunnelVerifier) Reset() {
	*x = TunnelVerifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_v1_verifiers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelVerifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelVerifier) ProtoMessage() {}

func (x *TunnelVerifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_v1_verifiers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelVerifier.ProtoReflect.Descriptor instead.
func (*TunnelVerifier) Descriptor() ([]byte, []int) {
	return file_proto_api_v1_verifiers_proto_rawDescGZIP(), []int{4}
}

func (m *TunnelVerifier) GetVerifier() isTunnelVerifier_Verifier {
	if m != nil {
		return m.Verifier
	}
	return nil
}

func (x *TunnelVerifier) GetSanVerifier() *SANVerifier {
	if x, ok := x.GetVerifier().(*TunnelVerifier_SanVerifier); ok {
		return x.SanVerifier
	}
	return nil
}

func (x *TunnelVerifier) GetEmptyVerifier() *EmptyVerifier {
	if x, ok := x.GetVerifier().(*TunnelVerifier_EmptyVerifier); ok {
		return x.EmptyVerifier
	}
	return nil
}

type isTunnelVerifier_Verifier interface {
	isTunnelVerifier_Verifier()
}

type TunnelVerifier_SanVerifier struct {
	SanVerifier *SANVerifier `protobuf:"bytes,1,opt,name=san_verifier,json=sanVerifier,proto3,oneof"`
}

type TunnelVerifier_EmptyVerifier struct {
	EmptyVerifier *EmptyVerifier `protobuf:"bytes,2,opt,name=empty_verifier,json=emptyVerifier,proto3,oneof"`
}

func (*TunnelVerifier_SanVerifier) isTunnelVerifier_Verifier() {}

func (*TunnelVerifier_EmptyVerifier) isTunnelVerifier_Verifier() {}

var File_proto_api_v1_verifiers_proto protoreflect.FileDescriptor

var file_proto_api_v1_verifiers_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19,
	0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x86, 0x02, 0x0a, 0x0c, 0x58,
	0x35, 0x30, 0x39, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0b, 0x74,
	0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x64,
	0x65, 0x70, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x47, 0x0a, 0x21, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x46, 0x72,
	0x6f, 0x6d, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x60, 0x0a, 0x0a, 0x53, 0x41, 0x4e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x03, 0x64, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x64, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x05,
	0x0a, 0x03, 0x73, 0x61, 0x6e, 0x22, 0x51, 0x0a, 0x0b, 0x53, 0x41, 0x4e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x61, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x61, 0x71, 0x2e, 0x73, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08,
	0x61, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x0c, 0x73,
	0x61, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41,
	0x4e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x61, 0x6e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x51, 0x0a, 0x0e, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x61, 0x71, 0x2e, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2d, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x75, 0x6d, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x63, 0x68,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_v1_verifiers_proto_rawDescOnce sync.Once
	file_proto_api_v1_verifiers_proto_rawDescData = file_proto_api_v1_verifiers_proto_rawDesc
)

func file_proto_api_v1_verifiers_proto_rawDescGZIP() []byte {
	file_proto_api_v1_verifiers_proto_rawDescOnce.Do(func() {
		file_proto_api_v1_verifiers_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_v1_verifiers_proto_rawDescData)
	})
	return file_proto_api_v1_verifiers_proto_rawDescData
}

var file_proto_api_v1_verifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_api_v1_verifiers_proto_goTypes = []interface{}{
	(*EmptyVerifier)(nil),  // 0: saq.sandwich.proto.api.v1.EmptyVerifier
	(*X509Verifier)(nil),   // 1: saq.sandwich.proto.api.v1.X509Verifier
	(*SANMatcher)(nil),     // 2: saq.sandwich.proto.api.v1.SANMatcher
	(*SANVerifier)(nil),    // 3: saq.sandwich.proto.api.v1.SANVerifier
	(*TunnelVerifier)(nil), // 4: saq.sandwich.proto.api.v1.TunnelVerifier
	(*Certificate)(nil),    // 5: saq.sandwich.proto.api.v1.Certificate
}
var file_proto_api_v1_verifiers_proto_depIdxs = []int32{
	5, // 0: saq.sandwich.proto.api.v1.X509Verifier.trusted_cas:type_name -> saq.sandwich.proto.api.v1.Certificate
	2, // 1: saq.sandwich.proto.api.v1.SANVerifier.alt_names:type_name -> saq.sandwich.proto.api.v1.SANMatcher
	3, // 2: saq.sandwich.proto.api.v1.TunnelVerifier.san_verifier:type_name -> saq.sandwich.proto.api.v1.SANVerifier
	0, // 3: saq.sandwich.proto.api.v1.TunnelVerifier.empty_verifier:type_name -> saq.sandwich.proto.api.v1.EmptyVerifier
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_api_v1_verifiers_proto_init() }
func file_proto_api_v1_verifiers_proto_init() {
	if File_proto_api_v1_verifiers_proto != nil {
		return
	}
	file_proto_api_v1_certificate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_api_v1_verifiers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyVerifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_verifiers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*X509Verifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_verifiers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SANMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_verifiers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SANVerifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_v1_verifiers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelVerifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_v1_verifiers_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*SANMatcher_Email)(nil),
		(*SANMatcher_Dns)(nil),
		(*SANMatcher_IpAddress)(nil),
	}
	file_proto_api_v1_verifiers_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TunnelVerifier_SanVerifier)(nil),
		(*TunnelVerifier_EmptyVerifier)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_v1_verifiers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_api_v1_verifiers_proto_goTypes,
		DependencyIndexes: file_proto_api_v1_verifiers_proto_depIdxs,
		MessageInfos:      file_proto_api_v1_verifiers_proto_msgTypes,
	}.Build()
	File_proto_api_v1_verifiers_proto = out.File
	file_proto_api_v1_verifiers_proto_rawDesc = nil
	file_proto_api_v1_verifiers_proto_goTypes = nil
	file_proto_api_v1_verifiers_proto_depIdxs = nil
}
