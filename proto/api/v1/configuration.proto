// Copyright 2023 SandboxAQ
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package saq.sandwich.proto.api.v1;

option go_package = "github.com/sandbox-quantum/sandwich/go/proto/sandwich/api/v1";

import "proto/api/v1/compliance.proto";
import "proto/api/v1/tls.proto";

// Supported implementations.
//
// Implementations are low-level cryptographic libraries that Sandwich uses to
// provide cryptographic capabilities.
enum Implementation {
  // Unspecified implementation.
  // Using this value always leads to an error.
  IMPL_UNSPECIFIED = 0;

  // OpenSSL 1.1.1 with liboqs.
  //
  // See [liboqs](https://github.com/open-quantum-safe/liboqs).
  IMPL_OPENSSL1_1_1_OQS = 1;

  // BoringSSL with liboqs.
  //
  // See [liboqs](https://github.com/open-quantum-safe/liboqs).
  IMPL_BORINGSSL_OQS = 2;
}

// Client options.
message ClientOptions {
  oneof opts {
    // TLS options.
    //
    // See [TLSClientOptions](TLSClientOptions.md).
    TLSClientOptions tls = 1;
  }
  // Next id: 2
}

// Server options.
message ServerOptions {
  oneof opts {
    // TLS options.
    //
    // See [TLSServerOptions](TLSServerOptions.md).
    TLSServerOptions tls = 1;
  }
  // Next id: 2
}

// A configuration for a sandwich tunnel (either server or client).
message Configuration {
  // The implementation to use.
  //
  // See [Implementation](Implementation.md).
  Implementation impl = 1;

  // Options specific to the `{protocol, implementation}` pair.
  oneof opts {
    // Client options.
    //
    // See [ClientOptions](ClientOptions.md).
    ClientOptions client = 2;

    // Server options.
    // See [ServerOptions](ServerOptions.md).
    ServerOptions server = 3;
  }

  // Constraints applied on the choice of algorithms in the configuration.
  //
  // See [Compliance](Compliance.md).
  Compliance compliance = 4;
  // Next id: 5
}
