// Copyright 2023 SandboxAQ
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package saq.sandwich.proto.api.v1;

option go_package = "github.com/sandbox-quantum/sandwich/go/proto/sandwich/api/v1";

import "proto/api/v1/certificate.proto";
import "proto/api/v1/private_key.proto";
import "proto/api/v1/verifiers.proto";

// An X.509 identity.
// An X.509 identity consists of a certificate and its associated private key.
message X509Identity {
  // The certificate.
  Certificate certificate = 1;

  // The private key.
  PrivateKey private_key = 2;
}

// TLS options, for both client and server modes.
message TLSOptions {
  // The kem.
  repeated string kem = 1;

  // Verifier.
  oneof peer_verifier {
    // X.509 verifier.
    X509Verifier x509_verifier = 3;

    // Empty verifier.
    // **Warning**: when used, all security requirements are discarded!
    EmptyVerifier empty_verifier = 4;
  }

  // An identity.
  // In server mode, the identity is used to perform the TLS handshake
  // (the private key is used to sign the transcript, and the certificate
  // is presented to clients).
  X509Identity identity = 5;

  // Next id: 6
}

// TLS options, specific to the client mode.
message TLSClientOptions {
  // Common TLS options.
  TLSOptions common_options = 1;
}

// TLS options, specific to the server mode.
message TLSServerOptions {
  // Common TLS options.
  TLSOptions common_options = 1;
}
