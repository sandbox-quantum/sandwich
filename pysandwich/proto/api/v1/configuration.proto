// Copyright (c) SandboxAQ. All rights reserved.
// SPDX-License-Identifier: AGPL-3.0-only

syntax = "proto3";

package saq.sandwich.proto.api.v1;

option go_package = "github.com/sandbox-quantum/sandwich/go/proto/sandwich/api/v1";

import "pysandwich/proto/api/v1/tls.proto";

// Supported implementations.
//
// Implementations are low-level cryptographic libraries that Sandwich uses to
// provide cryptographic capabilities.
enum Implementation {
  // Unspecified implementation.
  // Using this value always leads to an error.
  IMPL_UNSPECIFIED = 0;

  // OpenSSL 1.1.1 with liboqs.
  //
  // See [liboqs](https://github.com/open-quantum-safe/liboqs).
  IMPL_OPENSSL1_1_1_OQS = 1;

  // BoringSSL with liboqs.
  //
  // See [liboqs](https://github.com/open-quantum-safe/liboqs).
  IMPL_BORINGSSL_OQS = 2;
}

// Client options.
message ClientOptions {
  oneof opts {
    // TLS options.
    //
    // See [TLSClientOptions](TLSClientOptions.md).
    TLSClientOptions tls = 1;
  }
  // Next id: 2
}

// Server options.
message ServerOptions {
  oneof opts {
    // TLS options.
    //
    // See [TLSServerOptions](TLSServerOptions.md).
    TLSServerOptions tls = 1;
  }
  // Next id: 2
}

// A configuration for a sandwich tunnel (either server or client).
message Configuration {
  // The implementation to use.
  //
  // See [Implementation](Implementation.md).
  Implementation impl = 1;

  // Options specific to the `{protocol, implementation}` pair.
  oneof opts {
    // Client options.
    //
    // See [ClientOptions](ClientOptions.md).
    ClientOptions client = 2;

    // Server options.
    // See [ServerOptions](ServerOptions.md).
    ServerOptions server = 3;
  }

  // Next id: 5
}
